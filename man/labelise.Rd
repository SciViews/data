% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/label.R
\name{labelise}
\alias{labelise}
\alias{labelize}
\alias{labelise.default}
\alias{labelise.data.frame}
\alias{cl}
\title{Set label (and units)}
\usage{
labelise(x, label, units = NULL, as.labelled = TRUE, ...)

labelize(x, label, units = NULL, as.labelled = TRUE, ...)

\method{labelise}{default}(x, label, units = NULL, as.labelled = TRUE, ...)

\method{labelise}{data.frame}(x, label, units = NULL, as.labelled = TRUE,
  self = TRUE, ...)

cl(..., label = NULL, units = NULL, as.labelled = TRUE)
}
\arguments{
\item{x}{An object.}

\item{label}{The character string to set as \code{label} attribute to \code{x}.}

\item{units}{The units (optional) as a character string to set for \code{x}.}

\item{as.labelled}{Should the object be converted as a \code{labelled} S3 object
(by default)? If you don't make labelled objects, subsetting the data will
lead to a lost of \code{label} and \code{units} attributes for all variables.}

\item{...}{Further arguments: itesm to be concatenated in a vector using
\code{c(...)} for \code{cl()}.}

\item{self}{Do we label the \code{data.frame} itself (\code{self = TRUE}, by default)
or variables within that \code{data.frame} (\code{self = FALSE})? In the later case,
\code{label=} and \code{units=} must be either lists or character vectors of the same
length as \code{x}, or be named with the names of several or all \code{x} variables.}
}
\value{
The \code{x} object plus a \code{label} attribute, and possibly, a \code{units}
attribute.
}
\description{
Set the \code{label}, as well as the \code{units} attributes to an object.
The label can be used for better display as plot axes labels, or as table
headers in pretty-formatted \R outputs. The units are usually associated to
the label in axes labels for plots. \code{cl()} is a shortcut for concatenate
(\code{c()}) and \code{labelise()}.
}
\details{
The same mechanism as the one used in package \strong{Hmisc} is used
here. However, \strong{Hmisc} always add the \strong{labelled} class to an object,
while here, this is optional. Setting this class make the object more nicely
printed, and subsettable without loosing these attributes. But it conflicts
with a class of the same name in package \strong{haven}, used for other purposes.
So, here, the class is \strong{not} set by default.
}
\examples{
# Labelise a vector:
x <- 1:10
x <- labelise(x, label = "A suite of integers", units = "cm")
x
# or, in a single operation:
x <- cl(1:10, label = "A suite of integers", units = "cm")
x
# Adding the labelled class:
x <- cl(1:10, label = "Integers", units = "cm", as.labelled = TRUE)
x

# Labelise a data.frame
data(iris)
iris <- labelise(iris, "The famous iris dataset")
# but if you indicate self = FALSE, you can labelise variables within the
# data.frame (use a list or character vector of same length as x, or a
# named list or character vector):
iris <- labelise(iris, self = FALSE, label = list(
  Sepal.Length = "Length of the sepals",
  Petal.Length = "Length of the petals"
  ), units = c(rep("cm", 4), NA))
}
\seealso{
\code{\link[=label]{label()}}, \code{\link[=units]{units()}}
}
\author{
Philippe Grosjean \href{mailto:phgrosjean@sciviews.org}{phgrosjean@sciviews.org}
}
\concept{
labelling objects
}
\keyword{utilities}

# data To Do list

* Do not label or change class (use data.frame) for initial dataset, but do it
  within read() with lang = argument + data_class = .

* Make use of translation files or functions.

* Test for sidecar files.

* data_example() function

* Add more datasets (plankton, ...).

* about(), .? and the dataframe methods to be placed somewhere.

* unlabelise() + more meaningful classes for labelled, and always label

* rio::characterize() or factorize() for SPSS or SAS datasets.


* Add more recognized classes (Date, time, etc.) for headers (+ abbrev?)

* make iris.csvy, iris.csvy.zip, iris.sas7bdat and iris.syd working: add foreign
  function & csvy.

* Look at fst package for ultra-fast csv read/write (+ data.table).

* write() + keep it compatible with base::write()!

* Functions to write headers too: write -> read should restore same object!

* Use a Github repository that provides scripts to translated datasets in
  different languages, and use it in read(...., lang = "xx").

* Integrate units with the convertr, prettyunits and units packages.

* A smaller example for read(), and detail all the cases in a vignette instead.

* revdep, see for instance, https://github.com/hadley/nycflights13
